{
  "contractName": "PakbetStudent",
  "abi": [
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "students",
      "outputs": [
        {
          "name": "blockChainAccount",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_hashCode",
          "type": "bytes32"
        }
      ],
      "name": "awardRegularCertificate",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "issuers",
      "outputs": [
        {
          "name": "active",
          "type": "bool"
        },
        {
          "name": "name",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getIssuerCount",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "certificates",
      "outputs": [
        {
          "name": "issuedTo",
          "type": "uint256"
        },
        {
          "name": "issuedBy",
          "type": "uint256"
        },
        {
          "name": "templateUsed",
          "type": "uint256"
        },
        {
          "name": "date",
          "type": "uint32"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_title",
          "type": "string"
        },
        {
          "name": "_description",
          "type": "string"
        }
      ],
      "name": "createTemplate",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "isOwner",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_hashCode",
          "type": "bytes32"
        }
      ],
      "name": "validateRegularCertificate",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_templateId",
          "type": "uint256"
        },
        {
          "name": "_hashCode",
          "type": "bytes32"
        },
        {
          "name": "_studentAddress",
          "type": "address"
        }
      ],
      "name": "awardPublicCertificates",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_issuerAddress",
          "type": "address"
        },
        {
          "name": "_name",
          "type": "string"
        }
      ],
      "name": "accreditIssuer",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "templates",
      "outputs": [
        {
          "name": "createdBy",
          "type": "address"
        },
        {
          "name": "title",
          "type": "string"
        },
        {
          "name": "description",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_index",
          "type": "uint256"
        }
      ],
      "name": "deActivateIssuerById",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_id",
          "type": "uint256"
        }
      ],
      "name": "getIssuedTemplates",
      "outputs": [
        {
          "name": "",
          "type": "uint256[]"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_index",
          "type": "uint256"
        }
      ],
      "name": "reActivateIssuerById",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "issuerAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "title",
          "type": "string"
        },
        {
          "indexed": false,
          "name": "description",
          "type": "string"
        }
      ],
      "name": "NewTemplate",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "hashCode",
          "type": "bytes32"
        }
      ],
      "name": "NewCertificate",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "hashCode",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "name": "student",
          "type": "address"
        }
      ],
      "name": "NewPremiumCertificate",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "issuerId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "name",
          "type": "string"
        }
      ],
      "name": "NewIssuer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "id",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "student",
          "type": "address"
        }
      ],
      "name": "NewStudent",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_studentAddress",
          "type": "address"
        }
      ],
      "name": "enrollStudent",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_id",
          "type": "uint256"
        }
      ],
      "name": "getStudentCertificates",
      "outputs": [
        {
          "name": "",
          "type": "uint256[]"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.0+commit.1d4f565a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"students\",\"outputs\":[{\"name\":\"blockChainAccount\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_studentAddress\",\"type\":\"address\"}],\"name\":\"enrollStudent\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_hashCode\",\"type\":\"bytes32\"}],\"name\":\"awardRegularCertificate\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"issuers\",\"outputs\":[{\"name\":\"active\",\"type\":\"bool\"},{\"name\":\"name\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getIssuerCount\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"certificates\",\"outputs\":[{\"name\":\"issuedTo\",\"type\":\"uint256\"},{\"name\":\"issuedBy\",\"type\":\"uint256\"},{\"name\":\"templateUsed\",\"type\":\"uint256\"},{\"name\":\"date\",\"type\":\"uint32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_title\",\"type\":\"string\"},{\"name\":\"_description\",\"type\":\"string\"}],\"name\":\"createTemplate\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isOwner\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_hashCode\",\"type\":\"bytes32\"}],\"name\":\"validateRegularCertificate\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_templateId\",\"type\":\"uint256\"},{\"name\":\"_hashCode\",\"type\":\"bytes32\"},{\"name\":\"_studentAddress\",\"type\":\"address\"}],\"name\":\"awardPublicCertificates\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_issuerAddress\",\"type\":\"address\"},{\"name\":\"_name\",\"type\":\"string\"}],\"name\":\"accreditIssuer\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"templates\",\"outputs\":[{\"name\":\"createdBy\",\"type\":\"address\"},{\"name\":\"title\",\"type\":\"string\"},{\"name\":\"description\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_index\",\"type\":\"uint256\"}],\"name\":\"deActivateIssuerById\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"getStudentCertificates\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"getIssuedTemplates\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_index\",\"type\":\"uint256\"}],\"name\":\"reActivateIssuerById\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"issuerAddress\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"title\",\"type\":\"string\"},{\"indexed\":false,\"name\":\"description\",\"type\":\"string\"}],\"name\":\"NewTemplate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"hashCode\",\"type\":\"bytes32\"}],\"name\":\"NewCertificate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"hashCode\",\"type\":\"bytes32\"},{\"indexed\":false,\"name\":\"student\",\"type\":\"address\"}],\"name\":\"NewPremiumCertificate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"issuerId\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"name\",\"type\":\"string\"}],\"name\":\"NewIssuer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"student\",\"type\":\"address\"}],\"name\":\"NewStudent\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"}],\"devdoc\":{\"methods\":{\"accreditIssuer(address,string)\":{\"details\":\"Only the owner of the smart contract account can call this function. \\r\",\"params\":{\"_issuerAddress\":\"Blockchain Address associated to the training institution.\\r\",\"_name\":\"Name of the training institution.\\r\"}},\"awardPublicCertificates(uint256,bytes32,address)\":{\"params\":{\"_hashCode\":\"the resulting value when pdf is hashed.\\r\",\"_studentAddress\":\"Blockchain Address associated to the student.\\r\",\"_templateId\":\"uint256 value corresponding to the index position of template in the templates[] array.\\r\"}},\"awardRegularCertificate(bytes32)\":{\"details\":\"Record the hash value of the pdf document to the blockchain account.\\r\",\"params\":{\"_hashCode\":\"the resulting value when pdf is hashed.\\r\"},\"return\":\"true if awarding of certificate is good, false if awarding of certificate fails.\\r\"},\"createTemplate(string,string)\":{\"details\":\"Only account in the issuer[] array can call this function.\\r\",\"params\":{\"_description\":\"certificate description e.g. BTA Expert Program\\r\",\"_title\":\"certificate description e.g. Certificate of Attendance.\\r\"}},\"deActivateIssuerById(uint256)\":{\"params\":{\"_index\":\"uint256 value corresponding to the index position of the training institution\\r in the issuers[] array.\\r\"}},\"enrollStudent(address)\":{\"details\":\"Only accredited account can call this function. \\r\",\"params\":{\"_studentAddress\":\"Blockchain Address associated to the student.\\r\"}},\"getIssuedTemplates(uint256)\":{\"params\":{\"_id\":\"uint256 value corresponding to the index position of the training institution\\r\"},\"return\":\"an array containing the template ids created template by the institution \\r\"},\"getIssuerCount()\":{\"return\":\"the number of accredited institution\\r\"},\"getStudentCertificates(uint256)\":{\"params\":{\"_id\":\"uint256 value corresponding to the index position of the student\\r in the students[] array.\\r\"},\"return\":\"an array containing the certificate ids owned by the student.\\r\"},\"isOwner()\":{\"return\":\"true if `msg.sender` is the owner of the contract.\\r\"},\"owner()\":{\"return\":\"the address of the owner.\\r\"},\"reActivateIssuerById(uint256)\":{\"params\":{\"_index\":\"uint256 value corresponding to the index position of the training institution\\r in the issuers[] array.\\r\"}},\"renounceOwnership()\":{\"details\":\"Allows the current owner to relinquish control of the contract.\\r\"},\"transferOwnership(address)\":{\"details\":\"Allows the current owner to transfer control of the contract to a newOwner.\\r\",\"params\":{\"newOwner\":\"The address to transfer ownership to.\\r\"}},\"validateRegularCertificate(bytes32)\":{\"params\":{\"_hashCode\":\"the resulting value when pdf is hashed.\\r\"},\"return\":\"true if Certificate exist in the blockchain, false if not.\\r\"}}},\"userdoc\":{\"methods\":{\"accreditIssuer(address,string)\":{\"notice\":\"Add training institution to the blockchain.\\r\"},\"awardRegularCertificate(bytes32)\":{\"notice\":\"Only accredited account can call this function.\\r\"},\"createTemplate(string,string)\":{\"notice\":\"Creates blank certificates which will become basis for certificates\\r to be issued.\\r\"},\"deActivateIssuerById(uint256)\":{\"notice\":\"Prevent a training institution from creating and awarding certificates.\\r\"},\"enrollStudent(address)\":{\"notice\":\"Add student to the blockchain.\\r\"},\"reActivateIssuerById(uint256)\":{\"notice\":\"Allows a training institution from creating and awarding certificates.\\r\"},\"renounceOwnership()\":{\"notice\":\"Renouncing to ownership will leave the contract without an owner.\\r It will not be possible to call the functions with the `onlyOwner`\\r modifier anymore.\\r\"}}}},\"settings\":{\"compilationTarget\":{\"/D/ethereum/ctc/contracts/PakbetStudent.sol\":\"PakbetStudent\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/D/ethereum/ctc/contracts/PakbetCertificate.sol\":{\"keccak256\":\"0x8eaf1a6d4cb76d0207f0841b7e254109f468ec60e7059c4aae253a52537705f4\",\"urls\":[\"bzzr://b61eabe9d94dec5d45a34fe4fe6957fb9f0cf57f3365a9f3dfa652e169d17673\"]},\"/D/ethereum/ctc/contracts/PakbetIssuer.sol\":{\"keccak256\":\"0x11ebb247d28f7a09a86c13e82f68c81f268931bd6079cb791ddaadd9fb7c2202\",\"urls\":[\"bzzr://63294ef53ba15a6e6068fa53b122e411720240b25ae81a667c6b27c334471234\"]},\"/D/ethereum/ctc/contracts/PakbetStudent.sol\":{\"keccak256\":\"0x5d4e794feb10226503e23af6245e9a749a2190e8cf9876f216fd916fc522483d\",\"urls\":[\"bzzr://1120fac0d106935889ec8f0491b742a75bc34916524d9e6bd45062db7438ef14\"]},\"/D/ethereum/ctc/contracts/PakbetTemplate.sol\":{\"keccak256\":\"0x68a71ad07451f3d5445b3b6b140605f47a7fc266b047c56700ca68b7d9647c74\",\"urls\":[\"bzzr://292bb85d0feb747ba8d49ab922f7aa5d6b3e8656527ba2e199181ae648ecd0bd\"]},\"/D/ethereum/ctc/contracts/PakbetUsecase.sol\":{\"keccak256\":\"0x1a94fcd7586307f6961efab0b0a6ac351fbecf27baf3d9fbf83be7fa52f6877f\",\"urls\":[\"bzzr://018d810bd54ee574bddd7c9fc4e88ea6c5e57d13a22c6bdb030b18944662f995\"]},\"/D/ethereum/ctc/contracts/ownable.sol\":{\"keccak256\":\"0x585a2f025ee234e642ac3dff65fd66bf8a69e80a60f0948f89e919bd30dfdf43\",\"urls\":[\"bzzr://a365be6631b4b7206e401551b60251340e2383968f505b1502c095a4544e15cd\"]}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "0x608060405260043610610107576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806306ead22e1461010c5780632a207eae1461018757806352a8f271146101d857806361ec30c41461022b57806363527b49146102ea578063663b3e22146103155780636aeae83714610385578063715018a6146104605780638da5cb5b146104775780638f32d59b146104ce57806392f0ae86146104fd57806397ded1b014610550578063a4d68d75146105b5578063bc5256521461065b578063c01ff84c146107ae578063d3eacc19146107e9578063e5f5a14614610879578063e97c147b14610909578063f2fde38b14610944575b600080fd5b34801561011857600080fd5b506101456004803603602081101561012f57600080fd5b8101908080359060200190929190505050610995565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561019357600080fd5b506101d6600480360360208110156101aa57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506109e2565b005b3480156101e457600080fd5b50610211600480360360208110156101fb57600080fd5b8101908080359060200190929190505050610aa1565b604051808215151515815260200191505060405180910390f35b34801561023757600080fd5b506102646004803603602081101561024e57600080fd5b8101908080359060200190929190505050610c14565b604051808315151515815260200180602001828103825283818151815260200191508051906020019080838360005b838110156102ae578082015181840152602081019050610293565b50505050905090810190601f1680156102db5780820380516001836020036101000a031916815260200191505b50935050505060405180910390f35b3480156102f657600080fd5b506102ff610cec565b6040518082815260200191505060405180910390f35b34801561032157600080fd5b5061034e6004803603602081101561033857600080fd5b8101908080359060200190929190505050610d0c565b604051808581526020018481526020018381526020018263ffffffff1663ffffffff16815260200194505050505060405180910390f35b34801561039157600080fd5b5061045e600480360360408110156103a857600080fd5b81019080803590602001906401000000008111156103c557600080fd5b8201836020820111156103d757600080fd5b803590602001918460018302840111640100000000831117156103f957600080fd5b90919293919293908035906020019064010000000081111561041a57600080fd5b82018360208201111561042c57600080fd5b8035906020019184600183028401116401000000008311171561044e57600080fd5b9091929391929390505050610d5b565b005b34801561046c57600080fd5b50610475610fc9565b005b34801561048357600080fd5b5061048c61109b565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156104da57600080fd5b506104e36110c4565b604051808215151515815260200191505060405180910390f35b34801561050957600080fd5b506105366004803603602081101561052057600080fd5b810190808035906020019092919050505061111b565b604051808215151515815260200191505060405180910390f35b34801561055c57600080fd5b506105b36004803603606081101561057357600080fd5b810190808035906020019092919080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061116d565b005b3480156105c157600080fd5b50610659600480360360408110156105d857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019064010000000081111561061557600080fd5b82018360208201111561062757600080fd5b8035906020019184600183028401116401000000008311171561064957600080fd5b9091929391929390505050611499565b005b34801561066757600080fd5b506106946004803603602081101561067e57600080fd5b81019080803590602001909291905050506114ff565b604051808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018060200180602001838103835285818151815260200191508051906020019080838360005b8381101561070a5780820151818401526020810190506106ef565b50505050905090810190601f1680156107375780820380516001836020036101000a031916815260200191505b50838103825284818151815260200191508051906020019080838360005b83811015610770578082015181840152602081019050610755565b50505050905090810190601f16801561079d5780820380516001836020036101000a031916815260200191505b509550505050505060405180910390f35b3480156107ba57600080fd5b506107e7600480360360208110156107d157600080fd5b8101908080359060200190929190505050611688565b005b3480156107f557600080fd5b506108226004803603602081101561080c57600080fd5b8101908080359060200190929190505050611710565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b8381101561086557808201518184015260208101905061084a565b505050509050019250505060405180910390f35b34801561088557600080fd5b506108b26004803603602081101561089c57600080fd5b810190808035906020019092919050505061187f565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b838110156108f55780820151818401526020810190506108da565b505050509050019250505060405180910390f35b34801561091557600080fd5b506109426004803603602081101561092c57600080fd5b810190808035906020019092919050505061199a565b005b34801561095057600080fd5b506109936004803603602081101561096757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611a23565b005b6003818154811015156109a457fe5b90600052602060002090600202016000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081565b33600660008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff161515610a3b57600080fd5b600560008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16151515610a9457600080fd5b610a9d82611a42565b5050565b6000336000600760008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff161515610b4057600080fd5b600281815481101515610b4f57fe5b906000526020600020906003020160000160009054906101000a900460ff161515610b7957600080fd5b600c600085815260200190815260200160002060009054906101000a900460ff16151515610ba657600080fd5b6001600c600086815260200190815260200160002060006101000a81548160ff0219169083151502179055507f35445dd7684af4d0b1828f42019bd59ce22b71771e931983dfe04d5eb270afd8846040518082815260200191505060405180910390a1600192505050919050565b600281815481101515610c2357fe5b90600052602060002090600302016000915090508060000160009054906101000a900460ff1690806001018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610ce25780601f10610cb757610100808354040283529160200191610ce2565b820191906000526020600020905b815481529060010190602001808311610cc557829003601f168201915b5050505050905082565b6000610cf66110c4565b1515610d0157600080fd5b600280549050905090565b600181815481101515610d1b57fe5b90600052602060002090600402016000915090508060000154908060010154908060020154908060030160009054906101000a900463ffffffff16905084565b33600660008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff161515610db457600080fd5b6000600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050600086868686600286815481101515610e0d57fe5b9060005260206000209060030201600101604051602001808060200180602001806020018481038452898982818152602001925080828437600081840152601f19601f8201169050808301925050508481038352878782818152602001925080828437600081840152601f19601f820116905080830192505050848103825285818154600181600116156101000203166002900481526020019150805460018160011615610100020316600290048015610f085780601f10610edd57610100808354040283529160200191610f08565b820191906000526020600020905b815481529060010190602001808311610eeb57829003601f168201915b505098505050505050505050604051602081830303815290604052805190602001209050610fc03388888080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505087878080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505084611bc4565b50505050505050565b610fd16110c4565b1515610fdc57600080fd5b600073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614905090565b6000600c600083815260200190815260200160002060009054906101000a900460ff16806111665750600b600083815260200190815260200160002060009054906101000a900460ff165b9050919050565b33600660008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615156111c657600080fd5b600480549050841015156111d957600080fd5b3373ffffffffffffffffffffffffffffffffffffffff166004858154811015156111ff57fe5b906000526020600020906003020160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614151561125357600080fd5b600560008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615156112ab57600080fd5b600b600084815260200190815260200160002060009054906101000a900460ff161515156112d857600080fd5b6000600860008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490506000600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905060006001806080604051908101604052808681526020018581526020018a81526020014263ffffffff168152509080600181540180825580915050906001820390600052602060002090600402016000909192909190915060008201518160000155602082015181600101556040820151816002015560608201518160030160006101000a81548163ffffffff021916908363ffffffff16021790555050500390506001600b600088815260200190815260200160002060006101000a81548160ff02191690831515021790555080600960008881526020019081526020016000208190555060038381548110151561145557fe5b906000526020600020906002020160010181908060018154018082558091505090600182039060005260206000200160009091929091909150555050505050505050565b6114a16110c4565b15156114ac57600080fd5b6114fa8383838080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050611f0c565b505050565b60048181548110151561150e57fe5b90600052602060002090600302016000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690806001018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156115e05780601f106115b5576101008083540402835291602001916115e0565b820191906000526020600020905b8154815290600101906020018083116115c357829003601f168201915b505050505090806002018054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561167e5780601f106116535761010080835404028352916020019161167e565b820191906000526020600020905b81548152906001019060200180831161166157829003601f168201915b5050505050905083565b6116906110c4565b151561169b57600080fd5b6002818154811015156116aa57fe5b906000526020600020906003020160000160009054906101000a900460ff1615156116d457600080fd5b60006002828154811015156116e557fe5b906000526020600020906003020160000160006101000a81548160ff02191690831515021790555050565b60603373ffffffffffffffffffffffffffffffffffffffff1660038381548110151561173857fe5b906000526020600020906002020160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614151561178c57600080fd5b606060038381548110151561179d57fe5b9060005260206000209060020201600101805490506040519080825280602002602001820160405280156117e05781602001602082028038833980820191505090505b50905060008090505b6003848154811015156117f857fe5b9060005260206000209060020201600101805490508110156118755760038481548110151561182357fe5b90600052602060002090600202016001018181548110151561184157fe5b9060005260206000200154828281518110151561185a57fe5b906020019060200201818152505080806001019150506117e9565b5080915050919050565b60606118896110c4565b151561189457600080fd5b600280549050821015156118a757600080fd5b60606002838154811015156118b857fe5b9060005260206000209060030201600201805490506040519080825280602002602001820160405280156118fb5781602001602082028038833980820191505090505b50905060008090505b60028481548110151561191357fe5b9060005260206000209060030201600201805490508110156119905760028481548110151561193e57fe5b90600052602060002090600302016002018181548110151561195c57fe5b9060005260206000200154828281518110151561197557fe5b90602001906020020181815250508080600101915050611904565b5080915050919050565b6119a26110c4565b15156119ad57600080fd5b6002818154811015156119bc57fe5b906000526020600020906003020160000160009054906101000a900460ff161515156119e757600080fd5b60016002828154811015156119f857fe5b906000526020600020906003020160000160006101000a81548160ff02191690831515021790555050565b611a2b6110c4565b1515611a3657600080fd5b611a3f81612132565b50565b600060038054809190600101611a58919061222c565b905081600382815481101515611a6a57fe5b906000526020600020906002020160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506001600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555080600860008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055507f76d881824e81c30f0d2ea36f999b13c9d258bc821dc2d29a17eb8ba7f95c275b8183604051808381526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019250505060405180910390a15050565b80600a600082815260200190815260200160002060009054906101000a900460ff16151515611bf257600080fd5b600060048054809190600101611c08919061225e565b90506000600760008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050600281815481101515611c5d57fe5b906000526020600020906003020160000160009054906101000a900460ff161515611c8757600080fd5b86600483815481101515611c9757fe5b906000526020600020906003020160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555085600483815481101515611cf657fe5b90600052602060002090600302016001019080519060200190611d1a929190612290565b5084600483815481101515611d2b57fe5b90600052602060002090600302016002019080519060200190611d4f929190612290565b50600281815481101515611d5f57fe5b90600052602060002090600302016002018290806001815401808255809150509060018203906000526020600020016000909192909190915055506001600a600086815260200190815260200160002060006101000a81548160ff0219169083151502179055507fcbb28b3e1f77d025889ab5d1e72a2eca69e6105bc36f0044122e59c55f40e18f878787604051808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018060200180602001838103835285818151815260200191508051906020019080838360005b83811015611e60578082015181840152602081019050611e45565b50505050905090810190601f168015611e8d5780820380516001836020036101000a031916815260200191505b50838103825284818151815260200191508051906020019080838360005b83811015611ec6578082015181840152602081019050611eab565b50505050905090810190601f168015611ef35780820380516001836020036101000a031916815260200191505b509550505050505060405180910390a150505050505050565b81600660008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16151515611f6657600080fd5b600060028054809190600101611f7c9190612310565b90506001600282815481101515611f8f57fe5b906000526020600020906003020160000160006101000a81548160ff02191690831515021790555082600282815481101515611fc757fe5b90600052602060002090600302016001019080519060200190611feb929190612290565b506001600660008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555080600760008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055507faf49f6e647e48528a5c4c0a5801947007b7fa9744c066de10b2f7e747754bf1d81846040518083815260200180602001828103825283818151815260200191508051906020019080838360005b838110156120f15780820151818401526020810190506120d6565b50505050905090810190601f16801561211e5780820380516001836020036101000a031916815260200191505b50935050505060405180910390a150505050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415151561216e57600080fd5b8073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b815481835581811115612259576002028160020283600052602060002091820191016122589190612342565b5b505050565b81548183558181111561228b5760030281600302836000526020600020918201910161228a9190612398565b5b505050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106122d157805160ff19168380011785556122ff565b828001600101855582156122ff579182015b828111156122fe5782518255916020019190600101906122e3565b5b50905061230c91906123fe565b5090565b81548183558181111561233d5760030281600302836000526020600020918201910161233c9190612423565b5b505050565b61239591905b8082111561239157600080820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556001820160006123889190612476565b50600201612348565b5090565b90565b6123fb91905b808211156123f757600080820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556001820160006123de9190612497565b6002820160006123ee9190612497565b5060030161239e565b5090565b90565b61242091905b8082111561241c576000816000905550600101612404565b5090565b90565b61247391905b8082111561246f57600080820160006101000a81549060ff02191690556001820160006124569190612497565b6002820160006124669190612476565b50600301612429565b5090565b90565b508054600082559060005260206000209081019061249491906123fe565b50565b50805460018160011615610100020316600290046000825580601f106124bd57506124dc565b601f0160209004906000526020600020908101906124db91906123fe565b5b5056fea165627a7a72305820dbafd1e28596e8e9c43584613865c51d765c7977f7cff4e0e3480c354bea770d0029",
  "sourceMap": "64:1441:3:-;;;528:10:6;519:6;;:19;;;;;;;;;;;;;;;;;;583:6;;;;;;;;;;;550:40;;579:1;550:40;;;;;;;;;;;;64:1441:3;;;;;;",
  "deployedSourceMap": "64:1441:3:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;947:25:5;;8:9:-1;5:2;;;30:1;27;20:12;5:2;947:25:5;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;947:25:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;326:185:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;326:185:3;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;326:185:3;;;;;;;;;;;;;;;;;;;;;;445:266:1;;8:9:-1;5:2;;;30:1;27;20:12;5:2;445:266:1;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;445:266:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;917:23:5;;8:9:-1;5:2;;;30:1;27;20:12;5:2;917:23:5;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;917:23:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;917:23:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;184:108:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;184:108:2;;;;;;;;;;;;;;;;;;;;;;;877:33:5;;8:9:-1;5:2;;;30:1;27;20:12;5:2;877:33:5;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;877:33:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;462:338:4;;8:9:-1;5:2;;;30:1;27;20:12;5:2;462:338:4;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;462:338:4;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;462:338:4;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;462:338:4;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;462:338:4;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;462:338:4;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;462:338:4;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;462:338:4;;;;;;;;;;;;;;;1304:130:6;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1304:130:6;;;;;;654:72;;8:9:-1;5:2;;;30:1;27;20:12;5:2;654:72:6;;;;;;;;;;;;;;;;;;;;;;;;;;;952:85;;8:9:-1;5:2;;;30:1;27;20:12;5:2;952:85:6;;;;;;;;;;;;;;;;;;;;;;;;;;;881:175:1;;8:9:-1;5:2;;;30:1;27;20:12;5:2;881:175:1;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;881:175:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1344:832;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1344:832:1;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1344:832:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;605:147:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;605:147:2;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;605:147:2;;;;;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;605:147:2;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;605:147:2;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;605:147:2;;;;;;;;;;;;;;;979:27:5;;8:9:-1;5:2;;;30:1;27;20:12;5:2;979:27:5;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;979:27:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;979:27:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;979:27:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1003:156:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1003:156:2;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1003:156:2;;;;;;;;;;;;;;;;;;;;737:432:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;737:432:3;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;737:432:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;737:432:3;;;;;;;;;;;;;;;;;1020:407:4;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1020:407:4;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1020:407:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1020:407:4;;;;;;;;;;;;;;;;;1405:156:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1405:156:2;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1405:156:2;;;;;;;;;;;;;;;;;;;;1598:103:6;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1598:103:6;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1598:103:6;;;;;;;;;;;;;;;;;;;;;;947:25:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;326:185:3:-;396:10;1636:17:5;:33;1654:14;1636:33;;;;;;;;;;;;;;;;;;;;;;;;;1628:42;;;;;;;;428:15:3;:32;444:15;428:32;;;;;;;;;;;;;;;;;;;;;;;;;427:33;419:42;;;;;;;;472:31;487:15;472:14;:31::i;:::-;326:185;;:::o;445:266:1:-;535:4;515:10;2006:13:5;2022:15;:24;2038:7;2022:24;;;;;;;;;;;;;;;;2006:40;;2075:17;:26;2093:7;2075:26;;;;;;;;;;;;;;;;;;;;;;;;;2067:35;;;;;;;;2122:7;2130:5;2122:14;;;;;;;;;;;;;;;;;;;;:21;;;;;;;;;;;;2113:31;;;;;;;;561:19:1;:30;581:9;561:30;;;;;;;;;;;;;;;;;;;;;560:31;552:40;;;;;;;;636:4;603:19;:30;623:9;603:30;;;;;;;;;;;;:37;;;;;;;;;;;;;;;;;;656:25;671:9;656:25;;;;;;;;;;;;;;;;;;699:4;692:11;;445:266;;;;;:::o;917:23:5:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;184:108:2:-;243:7;845:9:6;:7;:9::i;:::-;837:18;;;;;;;;270:7:2;:14;;;;263:21;;184:108;:::o;877:33:5:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;462:338:4:-;562:10;1636:17:5;:33;1654:14;1636:33;;;;;;;;;;;;;;;;;;;;;;;;;1628:42;;;;;;;;585:13:4;601:15;:27;617:10;601:27;;;;;;;;;;;;;;;;585:43;;639:16;679:6;;687:12;;701:7;709:5;701:14;;;;;;;;;;;;;;;;;;;;:19;;668:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;668:53:4;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;668:53:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;668:53:4;;;658:64;;;;;;639:83;;733:59;749:10;761:6;;733:59;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;733:59:4;;;;;;769:12;;733:59;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;733:59:4;;;;;;783:8;733:15;:59::i;:::-;1681:1:5;;462:338:4;;;;;:::o;1304:130:6:-;845:9;:7;:9::i;:::-;837:18;;;;;;;;1399:1;1362:40;;1383:6;;;;;;;;;;;1362:40;;;;;;;;;;;;1426:1;1409:6;;:19;;;;;;;;;;;;;;;;;;1304:130::o;654:72::-;691:7;714:6;;;;;;;;;;;707:13;;654:72;:::o;952:85::-;991:4;1025:6;;;;;;;;;;;1011:20;;:10;:20;;;1004:27;;952:85;:::o;881:175:1:-;958:4;983:19;:30;1003:9;983:30;;;;;;;;;;;;;;;;;;;;;:64;;;;1017:19;:30;1037:9;1017:30;;;;;;;;;;;;;;;;;;;;;983:64;975:73;;881:175;;;:::o;1344:832::-;1510:10;1636:17:5;:33;1654:14;1636:33;;;;;;;;;;;;;;;;;;;;;;;;;1628:42;;;;;;;;1561:9:1;:16;;;;1547:11;:30;1539:39;;;;;;;;1633:10;1597:46;;:9;1607:11;1597:22;;;;;;;;;;;;;;;;;;;;:32;;;;;;;;;;;;:46;;;1589:55;;;;;;;;1663:15;:32;1679:15;1663:32;;;;;;;;;;;;;;;;;;;;;;;;;1655:41;;;;;;;;1716:19;:30;1736:9;1716:30;;;;;;;;;;;;;;;;;;;;;1715:31;1707:40;;;;;;;;1768:20;1791:16;:33;1808:15;1791:33;;;;;;;;;;;;;;;;1768:56;;1835:19;1857:15;:27;1873:10;1857:27;;;;;;;;;;;;;;;;1835:49;;1905:10;2004:1;1918:12;1936:64;;;;;;;;;1948:12;1936:64;;;;1962:11;1936:64;;;;1975:11;1936:64;;;;1995:3;1936:64;;;;;1918:83;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;1918:83:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:87;1905:100;;2049:4;2016:19;:30;2036:9;2016:30;;;;;;;;;;;;:37;;;;;;;;;;;;;;;;;;2096:2;2064:18;:29;2083:9;2064:29;;;;;;;;;;;:34;;;;2119:8;2128:12;2119:22;;;;;;;;;;;;;;;;;;;;:40;;2165:2;2119:49;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;2119:49:1;;;;;;;;;;;;;;;;;;;;;;1681:1:5;;;1344:832:1;;;;:::o;605:147:2:-;845:9:6;:7;:9::i;:::-;837:18;;;;;;;;706:38:2;722:14;738:5;;706:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;706:38:2;;;;;;:15;:38::i;:::-;605:147;;;:::o;979:27:5:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1003:156:2:-;845:9:6;:7;:9::i;:::-;837:18;;;;;;;;1087:7:2;1095:6;1087:15;;;;;;;;;;;;;;;;;;;;:22;;;;;;;;;;;;1079:31;;;;;;;;1146:5;1121:7;1129:6;1121:15;;;;;;;;;;;;;;;;;;;;:22;;;:30;;;;;;;;;;;;;;;;;;1003:156;:::o;737:432:3:-;804:16;877:10;842:45;;:8;851:3;842:13;;;;;;;;;;;;;;;;;;;;:31;;;;;;;;;;;;:45;;;833:55;;;;;;;;899:23;939:8;948:3;939:13;;;;;;;;;;;;;;;;;;;;:31;;:38;;;;925:53;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;925:53:3;;;;899:79;;1004:6;1013:1;1004:10;;999:139;1020:8;1029:3;1020:13;;;;;;;;;;;;;;;;;;;;:31;;:38;;;;1016:1;:42;999:139;;;1092:8;1101:3;1092:13;;;;;;;;;;;;;;;;;;;;:31;;1124:1;1092:34;;;;;;;;;;;;;;;;;;1080:6;1087:1;1080:9;;;;;;;;;;;;;;;;;:46;;;;;1060:3;;;;;;;999:139;;;;1155:6;1148:13;;;737:432;;;:::o;1020:407:4:-;1093:16;845:9:6;:7;:9::i;:::-;837:18;;;;;;;;1137:7:4;:14;;;;1131:3;:20;1123:29;;;;;;;;1163:23;1203:7;1211:3;1203:12;;;;;;;;;;;;;;;;;;;;:29;;:36;;;;1189:51;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;1189:51:4;;;;1163:77;;1266:6;1275:1;1266:10;;1261:135;1282:7;1290:3;1282:12;;;;;;;;;;;;;;;;;;;;:29;;:36;;;;1278:1;:40;1261:135;;;1352:7;1360:3;1352:12;;;;;;;;;;;;;;;;;;;;:29;;1382:1;1352:32;;;;;;;;;;;;;;;;;;1340:6;1347:1;1340:9;;;;;;;;;;;;;;;;;:44;;;;;1320:3;;;;;;;1261:135;;;;1413:6;1406:13;;;1020:407;;;:::o;1405:156:2:-;845:9:6;:7;:9::i;:::-;837:18;;;;;;;;1490:7:2;1498:6;1490:15;;;;;;;;;;;;;;;;;;;;:22;;;;;;;;;;;;1489:23;1481:32;;;;;;;;1549:4;1524:7;1532:6;1524:15;;;;;;;;;;;;;;;;;;;;:22;;;:29;;;;;;;;;;;;;;;;;;1405:156;:::o;1598:103:6:-;845:9;:7;:9::i;:::-;837:18;;;;;;;;1667:28;1686:8;1667:18;:28::i;:::-;1598:103;:::o;1181:321:3:-;1250:10;1263:8;:17;;;;;;;;;;;:::i;:::-;1250:30;;1334:15;1301:8;1310:2;1301:12;;;;;;;;;;;;;;;;;;;;:30;;;:48;;;;;;;;;;;;;;;;;;1395:4;1360:15;:32;1376:15;1360:32;;;;;;;;;;;;;;;;:39;;;;;;;;;;;;;;;;;;1446:2;1410:16;:33;1427:15;1410:33;;;;;;;;;;;;;;;:38;;;;1464:31;1475:2;1479:15;1464:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;1181:321;;:::o;1435:680:4:-;1633:9;1772:17:5;:28;1790:9;1772:28;;;;;;;;;;;;;;;;;;;;;1771:29;1763:38;;;;;;;;1661:10:4;1674:9;:18;;;;;;;;;;;:::i;:::-;1661:31;;1703:13;1719:15;:25;1735:8;1719:25;;;;;;;;;;;;;;;;1703:41;;1774:7;1782:5;1774:14;;;;;;;;;;;;;;;;;;;;:21;;;;;;;;;;;;1765:31;;;;;;;;1843:8;1817:9;1827:2;1817:13;;;;;;;;;;;;;;;;;;;;:23;;;:34;;;;;;;;;;;;;;;;;;1884:6;1862:9;1872:2;1862:13;;;;;;;;;;;;;;;;;;;;:19;;:28;;;;;;;;;;;;:::i;:::-;;1929:12;1901:9;1911:2;1901:13;;;;;;;;;;;;;;;;;;;;:25;;:40;;;;;;;;;;;;:::i;:::-;;1962:7;1970:5;1962:14;;;;;;;;;;;;;;;;;;;;:31;;1999:2;1962:40;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;1962:40:4;;;;;;;;;;;;;;;;;;;;;;2044:4;2013:17;:28;2031:9;2013:28;;;;;;;;;;;;:35;;;;;;;;;;;;;;;;;;2064:43;2076:8;2086:6;2094:12;2064:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;2064:43:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;2064:43:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1812:1:5;;1435:680:4;;;;;:::o;1573:384:2:-;1668:14;1505:17:5;:33;1523:14;1505:33;;;;;;;;;;;;;;;;;;;;;;;;;1504:34;1496:43;;;;;;;;1695:10:2;1708:7;:16;;;;;;;;;;;:::i;:::-;1695:29;;1766:4;1745:7;1753:2;1745:11;;;;;;;;;;;;;;;;;;;;:18;;;:25;;;;;;;;;;;;;;;;;;1800:5;1781:7;1789:2;1781:11;;;;;;;;;;;;;;;;;;;;:16;;:24;;;;;;;;;;;;:::i;:::-;;1862:4;1826:17;:33;1844:14;1826:33;;;;;;;;;;;;;;;;:40;;;;;;;;;;;;;;;;;;1911:2;1877:15;:31;1893:14;1877:31;;;;;;;;;;;;;;;:36;;;;1929:20;1939:2;1943:5;1929:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1929:20:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1550:1:5;1573:384:2;;;:::o;1838:173:6:-;1928:1;1908:22;;:8;:22;;;;1900:31;;;;;;;;1972:8;1943:38;;1964:6;;;;;;;;;;;1943:38;;;;;;;;;;;;1997:8;1988:6;;:17;;;;;;;;;;;;;;;;;;1838:173;:::o;64:1441:3:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o",
  "source": "pragma solidity ^0.5.0;\r\n\r\nimport \"./PakbetCertificate.sol\";\r\n\r\ncontract PakbetStudent is PakbetCertificate {\r\n    \r\n    /**\r\n     * @notice Add student to the blockchain.\r\n     * @dev Only accredited account can call this function. \r\n     * @param _studentAddress Blockchain Address associated to the student.\r\n     */ \r\n    function enrollStudent(address _studentAddress) external isAccredited(msg.sender) {\r\n        require(!premiumStudents[_studentAddress]);\r\n        _enrollStudent(_studentAddress);\r\n    }\r\n    \r\n    /**\r\n     * @param _id uint256 value corresponding to the index position of the student\r\n     * in the students[] array.\r\n     * @return an array containing the certificate ids owned by the student.\r\n     */ \r\n    function getStudentCertificates(uint256 _id) external view returns(uint256[] memory) {\r\n        require (students[_id].blockChainAccount == msg.sender);\r\n        uint256[] memory result = new uint256[](students[_id].certificatesOwned.length);\r\n        \r\n        for (uint i = 0; i < students[_id].certificatesOwned.length; i++) {\r\n            result[i] = students[_id].certificatesOwned[i];\r\n        }\r\n        return result;\r\n    }\r\n    \r\n    function _enrollStudent(address _studentAccount) internal {\r\n        uint256 id = students.length++;\r\n        \r\n        students[id].blockChainAccount = _studentAccount;\r\n        premiumStudents[_studentAccount] = true;\r\n        addressToStudent[_studentAccount] = id;\r\n        emit NewStudent(id, _studentAccount);\r\n   }\r\n}\r\n\r\n//Owner\r\n//\"0xCA35b7d915458EF540aDe6068dFe2F44E8fa733c\",\"Tutu Institute\"\r\n\r\n//Issuers\r\n//\"0x14723A09ACff6D2A60DcdF7aA4AFf308FDDC160C\",\"Block Chain\"\r\n//\"0x4B0897b0513fdC7C541B6d9D7E929C4e5364D2dB\",\"Kadenang Bloke\"\r\n\r\n//Students\r\n//\"0x583031D1113aD414F02576BD6afaBfb302140225\"\r\n//\"0xdD870fA1b7C4700F2BD7f44238821C26f7392148\"\r\n\r\n//Templates\r\n//\"Certificate of Completion\",\"Blockchain Security\"\r\n//\"Certificate of Attendance\",\"BTA Excellarator\"\r\n//\"Certificate of Participation\",\"BTA Expert\"\r\n//\"Certificate of Participation\",\"Block Chain\"\r\n//\"Certificate of Participation\",\"Kadenang Bloke\"\r\n\r\n\r\n//Regular Certificate\r\n//\"0x4365727469666963617465206f662050617274696369706174696f6e0a4a6f00\"\r\n//\"0x4365727469666963617465206f6620417474656e64616e63650a4a6f656c0000\"\r\n//\"0x4365727469666963617465206f6620436f6d706c6574696f6e0a4a6f656c0000\"\r\n\r\n//Public Certificate\r\n//0,\"0x7465737400000000000000000000000000000000000000000000000000000000\",\"0x583031D1113aD414F02576BD6afaBfb302140225\"\r\n//1,\"0x6a6f656c00000000000000000000000000000000000000000000000000000000\",\"0x583031D1113aD414F02576BD6afaBfb302140225\" \r\n//2,\"0x6a696d656e657a00000000000000000000000000000000000000000000000000\",\"0x583031D1113aD414F02576BD6afaBfb302140225\"\r\n//3,\"0x4a6f656c204b6164656e61206664642064206600000000000000000000000000\",\"0xdD870fA1b7C4700F2BD7f44238821C26f7392148\"\r\n",
  "sourcePath": "D:/ethereum/ctc/contracts/PakbetStudent.sol",
  "ast": {
    "absolutePath": "/D/ethereum/ctc/contracts/PakbetStudent.sol",
    "exportedSymbols": {
      "PakbetStudent": [
        453
      ]
    },
    "id": 454,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 330,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:3"
      },
      {
        "absolutePath": "/D/ethereum/ctc/contracts/PakbetCertificate.sol",
        "file": "./PakbetCertificate.sol",
        "id": 331,
        "nodeType": "ImportDirective",
        "scope": 454,
        "sourceUnit": 204,
        "src": "27:33:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 332,
              "name": "PakbetCertificate",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 203,
              "src": "90:17:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_PakbetCertificate_$203",
                "typeString": "contract PakbetCertificate"
              }
            },
            "id": 333,
            "nodeType": "InheritanceSpecifier",
            "src": "90:17:3"
          }
        ],
        "contractDependencies": [
          203,
          328,
          636,
          821,
          930
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 453,
        "linearizedBaseContracts": [
          453,
          203,
          636,
          328,
          821,
          930
        ],
        "name": "PakbetStudent",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 353,
              "nodeType": "Block",
              "src": "408:103:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 346,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "427:33:3",
                        "subExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 343,
                            "name": "premiumStudents",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 717,
                            "src": "428:15:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                              "typeString": "mapping(address => bool)"
                            }
                          },
                          "id": 345,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 344,
                            "name": "_studentAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 335,
                            "src": "444:15:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "428:32:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 342,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1238,
                        1239
                      ],
                      "referencedDeclaration": 1238,
                      "src": "419:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 347,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "419:42:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 348,
                  "nodeType": "ExpressionStatement",
                  "src": "419:42:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 350,
                        "name": "_studentAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 335,
                        "src": "487:15:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 349,
                      "name": "_enrollStudent",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 452,
                      "src": "472:14:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 351,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "472:31:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 352,
                  "nodeType": "ExpressionStatement",
                  "src": "472:31:3"
                }
              ]
            },
            "documentation": "@notice Add student to the blockchain.\r\n@dev Only accredited account can call this function. \r\n@param _studentAddress Blockchain Address associated to the student.\r",
            "id": 354,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "id": 338,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1235,
                      "src": "396:3:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 339,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "sender",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": null,
                    "src": "396:10:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  }
                ],
                "id": 340,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 337,
                  "name": "isAccredited",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 770,
                  "src": "383:12:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_address_$",
                    "typeString": "modifier (address)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "383:24:3"
              }
            ],
            "name": "enrollStudent",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 336,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 335,
                  "name": "_studentAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 354,
                  "src": "349:23:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 334,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "349:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "348:25:3"
            },
            "returnParameters": {
              "id": 341,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "408:0:3"
            },
            "scope": 453,
            "src": "326:185:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 415,
              "nodeType": "Block",
              "src": "822:347:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 369,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 363,
                              "name": "students",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 710,
                              "src": "842:8:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_Student_$701_storage_$dyn_storage",
                                "typeString": "struct PakbetUseCase.Student storage ref[] storage ref"
                              }
                            },
                            "id": 365,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 364,
                              "name": "_id",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 356,
                              "src": "851:3:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "842:13:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Student_$701_storage",
                              "typeString": "struct PakbetUseCase.Student storage ref"
                            }
                          },
                          "id": 366,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "blockChainAccount",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 697,
                          "src": "842:31:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 367,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1235,
                            "src": "877:3:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 368,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "877:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "842:45:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 362,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1238,
                        1239
                      ],
                      "referencedDeclaration": 1238,
                      "src": "833:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 370,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "833:55:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 371,
                  "nodeType": "ExpressionStatement",
                  "src": "833:55:3"
                },
                {
                  "assignments": [
                    375
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 375,
                      "name": "result",
                      "nodeType": "VariableDeclaration",
                      "scope": 415,
                      "src": "899:23:3",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 373,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "899:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 374,
                        "length": null,
                        "nodeType": "ArrayTypeName",
                        "src": "899:9:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                          "typeString": "uint256[]"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 385,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 379,
                              "name": "students",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 710,
                              "src": "939:8:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_Student_$701_storage_$dyn_storage",
                                "typeString": "struct PakbetUseCase.Student storage ref[] storage ref"
                              }
                            },
                            "id": 381,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 380,
                              "name": "_id",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 356,
                              "src": "948:3:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "939:13:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Student_$701_storage",
                              "typeString": "struct PakbetUseCase.Student storage ref"
                            }
                          },
                          "id": 382,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "certificatesOwned",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 700,
                          "src": "939:31:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                            "typeString": "uint256[] storage ref"
                          }
                        },
                        "id": 383,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "length",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "939:38:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 378,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "925:13:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_$",
                        "typeString": "function (uint256) pure returns (uint256[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 376,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "929:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 377,
                        "length": null,
                        "nodeType": "ArrayTypeName",
                        "src": "929:9:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                          "typeString": "uint256[]"
                        }
                      }
                    },
                    "id": 384,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "925:53:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory",
                      "typeString": "uint256[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "899:79:3"
                },
                {
                  "body": {
                    "id": 411,
                    "nodeType": "Block",
                    "src": "1065:73:3",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 409,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 400,
                              "name": "result",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 375,
                              "src": "1080:6:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                "typeString": "uint256[] memory"
                              }
                            },
                            "id": 402,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 401,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 387,
                              "src": "1087:1:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "1080:9:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "baseExpression": {
                                  "argumentTypes": null,
                                  "id": 403,
                                  "name": "students",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 710,
                                  "src": "1092:8:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_struct$_Student_$701_storage_$dyn_storage",
                                    "typeString": "struct PakbetUseCase.Student storage ref[] storage ref"
                                  }
                                },
                                "id": 405,
                                "indexExpression": {
                                  "argumentTypes": null,
                                  "id": 404,
                                  "name": "_id",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 356,
                                  "src": "1101:3:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "1092:13:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Student_$701_storage",
                                  "typeString": "struct PakbetUseCase.Student storage ref"
                                }
                              },
                              "id": 406,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "certificatesOwned",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 700,
                              "src": "1092:31:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                                "typeString": "uint256[] storage ref"
                              }
                            },
                            "id": 408,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 407,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 387,
                              "src": "1124:1:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "1092:34:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1080:46:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 410,
                        "nodeType": "ExpressionStatement",
                        "src": "1080:46:3"
                      }
                    ]
                  },
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 396,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 390,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 387,
                      "src": "1016:1:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 391,
                            "name": "students",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 710,
                            "src": "1020:8:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_Student_$701_storage_$dyn_storage",
                              "typeString": "struct PakbetUseCase.Student storage ref[] storage ref"
                            }
                          },
                          "id": 393,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 392,
                            "name": "_id",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 356,
                            "src": "1029:3:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1020:13:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Student_$701_storage",
                            "typeString": "struct PakbetUseCase.Student storage ref"
                          }
                        },
                        "id": 394,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "certificatesOwned",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 700,
                        "src": "1020:31:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                          "typeString": "uint256[] storage ref"
                        }
                      },
                      "id": 395,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1020:38:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1016:42:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 412,
                  "initializationExpression": {
                    "assignments": [
                      387
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 387,
                        "name": "i",
                        "nodeType": "VariableDeclaration",
                        "scope": 412,
                        "src": "1004:6:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 386,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "1004:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "id": 389,
                    "initialValue": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 388,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1013:1:3",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "1004:10:3"
                  },
                  "loopExpression": {
                    "expression": {
                      "argumentTypes": null,
                      "id": 398,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "1060:3:3",
                      "subExpression": {
                        "argumentTypes": null,
                        "id": 397,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 387,
                        "src": "1060:1:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 399,
                    "nodeType": "ExpressionStatement",
                    "src": "1060:3:3"
                  },
                  "nodeType": "ForStatement",
                  "src": "999:139:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 413,
                    "name": "result",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 375,
                    "src": "1155:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                      "typeString": "uint256[] memory"
                    }
                  },
                  "functionReturnParameters": 361,
                  "id": 414,
                  "nodeType": "Return",
                  "src": "1148:13:3"
                }
              ]
            },
            "documentation": "@param _id uint256 value corresponding to the index position of the student\r\nin the students[] array.\r\n@return an array containing the certificate ids owned by the student.\r",
            "id": 416,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getStudentCertificates",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 357,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 356,
                  "name": "_id",
                  "nodeType": "VariableDeclaration",
                  "scope": 416,
                  "src": "769:11:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 355,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "769:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "768:13:3"
            },
            "returnParameters": {
              "id": 361,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 360,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 416,
                  "src": "804:16:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 358,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "804:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 359,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "804:9:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "803:18:3"
            },
            "scope": 453,
            "src": "737:432:3",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 451,
              "nodeType": "Block",
              "src": "1239:263:3",
              "statements": [
                {
                  "assignments": [
                    422
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 422,
                      "name": "id",
                      "nodeType": "VariableDeclaration",
                      "scope": 451,
                      "src": "1250:10:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 421,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1250:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 426,
                  "initialValue": {
                    "argumentTypes": null,
                    "id": 425,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "++",
                    "prefix": false,
                    "src": "1263:17:3",
                    "subExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 423,
                        "name": "students",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 710,
                        "src": "1263:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Student_$701_storage_$dyn_storage",
                          "typeString": "struct PakbetUseCase.Student storage ref[] storage ref"
                        }
                      },
                      "id": 424,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1263:15:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1250:30:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 432,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 427,
                          "name": "students",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 710,
                          "src": "1301:8:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_Student_$701_storage_$dyn_storage",
                            "typeString": "struct PakbetUseCase.Student storage ref[] storage ref"
                          }
                        },
                        "id": 429,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 428,
                          "name": "id",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 422,
                          "src": "1310:2:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1301:12:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Student_$701_storage",
                          "typeString": "struct PakbetUseCase.Student storage ref"
                        }
                      },
                      "id": 430,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "blockChainAccount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 697,
                      "src": "1301:30:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 431,
                      "name": "_studentAccount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 418,
                      "src": "1334:15:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1301:48:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 433,
                  "nodeType": "ExpressionStatement",
                  "src": "1301:48:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 438,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 434,
                        "name": "premiumStudents",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 717,
                        "src": "1360:15:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 436,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 435,
                        "name": "_studentAccount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 418,
                        "src": "1376:15:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1360:32:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 437,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1395:4:3",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "1360:39:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 439,
                  "nodeType": "ExpressionStatement",
                  "src": "1360:39:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 444,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 440,
                        "name": "addressToStudent",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 729,
                        "src": "1410:16:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 442,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 441,
                        "name": "_studentAccount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 418,
                        "src": "1427:15:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1410:33:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 443,
                      "name": "id",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 422,
                      "src": "1446:2:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1410:38:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 445,
                  "nodeType": "ExpressionStatement",
                  "src": "1410:38:3"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 447,
                        "name": "id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 422,
                        "src": "1475:2:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 448,
                        "name": "_studentAccount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 418,
                        "src": "1479:15:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 446,
                      "name": "NewStudent",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 671,
                      "src": "1464:10:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (uint256,address)"
                      }
                    },
                    "id": 449,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1464:31:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 450,
                  "nodeType": "EmitStatement",
                  "src": "1459:36:3"
                }
              ]
            },
            "documentation": null,
            "id": 452,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_enrollStudent",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 419,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 418,
                  "name": "_studentAccount",
                  "nodeType": "VariableDeclaration",
                  "scope": 452,
                  "src": "1205:23:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 417,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1205:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1204:25:3"
            },
            "returnParameters": {
              "id": 420,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1239:0:3"
            },
            "scope": 453,
            "src": "1181:321:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "internal"
          }
        ],
        "scope": 454,
        "src": "64:1441:3"
      }
    ],
    "src": "0:2841:3"
  },
  "legacyAST": {
    "absolutePath": "/D/ethereum/ctc/contracts/PakbetStudent.sol",
    "exportedSymbols": {
      "PakbetStudent": [
        453
      ]
    },
    "id": 454,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 330,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:3"
      },
      {
        "absolutePath": "/D/ethereum/ctc/contracts/PakbetCertificate.sol",
        "file": "./PakbetCertificate.sol",
        "id": 331,
        "nodeType": "ImportDirective",
        "scope": 454,
        "sourceUnit": 204,
        "src": "27:33:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 332,
              "name": "PakbetCertificate",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 203,
              "src": "90:17:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_PakbetCertificate_$203",
                "typeString": "contract PakbetCertificate"
              }
            },
            "id": 333,
            "nodeType": "InheritanceSpecifier",
            "src": "90:17:3"
          }
        ],
        "contractDependencies": [
          203,
          328,
          636,
          821,
          930
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 453,
        "linearizedBaseContracts": [
          453,
          203,
          636,
          328,
          821,
          930
        ],
        "name": "PakbetStudent",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 353,
              "nodeType": "Block",
              "src": "408:103:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 346,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "427:33:3",
                        "subExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 343,
                            "name": "premiumStudents",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 717,
                            "src": "428:15:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                              "typeString": "mapping(address => bool)"
                            }
                          },
                          "id": 345,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 344,
                            "name": "_studentAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 335,
                            "src": "444:15:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "428:32:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 342,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1238,
                        1239
                      ],
                      "referencedDeclaration": 1238,
                      "src": "419:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 347,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "419:42:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 348,
                  "nodeType": "ExpressionStatement",
                  "src": "419:42:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 350,
                        "name": "_studentAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 335,
                        "src": "487:15:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 349,
                      "name": "_enrollStudent",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 452,
                      "src": "472:14:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 351,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "472:31:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 352,
                  "nodeType": "ExpressionStatement",
                  "src": "472:31:3"
                }
              ]
            },
            "documentation": "@notice Add student to the blockchain.\r\n@dev Only accredited account can call this function. \r\n@param _studentAddress Blockchain Address associated to the student.\r",
            "id": 354,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "id": 338,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1235,
                      "src": "396:3:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 339,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "sender",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": null,
                    "src": "396:10:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  }
                ],
                "id": 340,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 337,
                  "name": "isAccredited",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 770,
                  "src": "383:12:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_address_$",
                    "typeString": "modifier (address)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "383:24:3"
              }
            ],
            "name": "enrollStudent",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 336,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 335,
                  "name": "_studentAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 354,
                  "src": "349:23:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 334,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "349:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "348:25:3"
            },
            "returnParameters": {
              "id": 341,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "408:0:3"
            },
            "scope": 453,
            "src": "326:185:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 415,
              "nodeType": "Block",
              "src": "822:347:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 369,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 363,
                              "name": "students",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 710,
                              "src": "842:8:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_Student_$701_storage_$dyn_storage",
                                "typeString": "struct PakbetUseCase.Student storage ref[] storage ref"
                              }
                            },
                            "id": 365,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 364,
                              "name": "_id",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 356,
                              "src": "851:3:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "842:13:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Student_$701_storage",
                              "typeString": "struct PakbetUseCase.Student storage ref"
                            }
                          },
                          "id": 366,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "blockChainAccount",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 697,
                          "src": "842:31:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 367,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1235,
                            "src": "877:3:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 368,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "877:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "842:45:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 362,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1238,
                        1239
                      ],
                      "referencedDeclaration": 1238,
                      "src": "833:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 370,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "833:55:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 371,
                  "nodeType": "ExpressionStatement",
                  "src": "833:55:3"
                },
                {
                  "assignments": [
                    375
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 375,
                      "name": "result",
                      "nodeType": "VariableDeclaration",
                      "scope": 415,
                      "src": "899:23:3",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 373,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "899:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 374,
                        "length": null,
                        "nodeType": "ArrayTypeName",
                        "src": "899:9:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                          "typeString": "uint256[]"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 385,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 379,
                              "name": "students",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 710,
                              "src": "939:8:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_Student_$701_storage_$dyn_storage",
                                "typeString": "struct PakbetUseCase.Student storage ref[] storage ref"
                              }
                            },
                            "id": 381,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 380,
                              "name": "_id",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 356,
                              "src": "948:3:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "939:13:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Student_$701_storage",
                              "typeString": "struct PakbetUseCase.Student storage ref"
                            }
                          },
                          "id": 382,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "certificatesOwned",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 700,
                          "src": "939:31:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                            "typeString": "uint256[] storage ref"
                          }
                        },
                        "id": 383,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "length",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "939:38:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 378,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "925:13:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_$",
                        "typeString": "function (uint256) pure returns (uint256[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 376,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "929:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 377,
                        "length": null,
                        "nodeType": "ArrayTypeName",
                        "src": "929:9:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                          "typeString": "uint256[]"
                        }
                      }
                    },
                    "id": 384,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "925:53:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory",
                      "typeString": "uint256[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "899:79:3"
                },
                {
                  "body": {
                    "id": 411,
                    "nodeType": "Block",
                    "src": "1065:73:3",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 409,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 400,
                              "name": "result",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 375,
                              "src": "1080:6:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                "typeString": "uint256[] memory"
                              }
                            },
                            "id": 402,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 401,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 387,
                              "src": "1087:1:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "1080:9:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "baseExpression": {
                                  "argumentTypes": null,
                                  "id": 403,
                                  "name": "students",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 710,
                                  "src": "1092:8:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_struct$_Student_$701_storage_$dyn_storage",
                                    "typeString": "struct PakbetUseCase.Student storage ref[] storage ref"
                                  }
                                },
                                "id": 405,
                                "indexExpression": {
                                  "argumentTypes": null,
                                  "id": 404,
                                  "name": "_id",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 356,
                                  "src": "1101:3:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "1092:13:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Student_$701_storage",
                                  "typeString": "struct PakbetUseCase.Student storage ref"
                                }
                              },
                              "id": 406,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "certificatesOwned",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 700,
                              "src": "1092:31:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                                "typeString": "uint256[] storage ref"
                              }
                            },
                            "id": 408,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 407,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 387,
                              "src": "1124:1:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "1092:34:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1080:46:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 410,
                        "nodeType": "ExpressionStatement",
                        "src": "1080:46:3"
                      }
                    ]
                  },
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 396,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 390,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 387,
                      "src": "1016:1:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 391,
                            "name": "students",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 710,
                            "src": "1020:8:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_Student_$701_storage_$dyn_storage",
                              "typeString": "struct PakbetUseCase.Student storage ref[] storage ref"
                            }
                          },
                          "id": 393,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 392,
                            "name": "_id",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 356,
                            "src": "1029:3:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1020:13:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Student_$701_storage",
                            "typeString": "struct PakbetUseCase.Student storage ref"
                          }
                        },
                        "id": 394,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "certificatesOwned",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 700,
                        "src": "1020:31:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                          "typeString": "uint256[] storage ref"
                        }
                      },
                      "id": 395,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1020:38:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1016:42:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 412,
                  "initializationExpression": {
                    "assignments": [
                      387
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 387,
                        "name": "i",
                        "nodeType": "VariableDeclaration",
                        "scope": 412,
                        "src": "1004:6:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 386,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "1004:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "id": 389,
                    "initialValue": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 388,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1013:1:3",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "1004:10:3"
                  },
                  "loopExpression": {
                    "expression": {
                      "argumentTypes": null,
                      "id": 398,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "1060:3:3",
                      "subExpression": {
                        "argumentTypes": null,
                        "id": 397,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 387,
                        "src": "1060:1:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 399,
                    "nodeType": "ExpressionStatement",
                    "src": "1060:3:3"
                  },
                  "nodeType": "ForStatement",
                  "src": "999:139:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 413,
                    "name": "result",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 375,
                    "src": "1155:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                      "typeString": "uint256[] memory"
                    }
                  },
                  "functionReturnParameters": 361,
                  "id": 414,
                  "nodeType": "Return",
                  "src": "1148:13:3"
                }
              ]
            },
            "documentation": "@param _id uint256 value corresponding to the index position of the student\r\nin the students[] array.\r\n@return an array containing the certificate ids owned by the student.\r",
            "id": 416,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getStudentCertificates",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 357,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 356,
                  "name": "_id",
                  "nodeType": "VariableDeclaration",
                  "scope": 416,
                  "src": "769:11:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 355,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "769:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "768:13:3"
            },
            "returnParameters": {
              "id": 361,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 360,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 416,
                  "src": "804:16:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 358,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "804:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 359,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "804:9:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "803:18:3"
            },
            "scope": 453,
            "src": "737:432:3",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 451,
              "nodeType": "Block",
              "src": "1239:263:3",
              "statements": [
                {
                  "assignments": [
                    422
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 422,
                      "name": "id",
                      "nodeType": "VariableDeclaration",
                      "scope": 451,
                      "src": "1250:10:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 421,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1250:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 426,
                  "initialValue": {
                    "argumentTypes": null,
                    "id": 425,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "++",
                    "prefix": false,
                    "src": "1263:17:3",
                    "subExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 423,
                        "name": "students",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 710,
                        "src": "1263:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Student_$701_storage_$dyn_storage",
                          "typeString": "struct PakbetUseCase.Student storage ref[] storage ref"
                        }
                      },
                      "id": 424,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1263:15:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1250:30:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 432,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 427,
                          "name": "students",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 710,
                          "src": "1301:8:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_Student_$701_storage_$dyn_storage",
                            "typeString": "struct PakbetUseCase.Student storage ref[] storage ref"
                          }
                        },
                        "id": 429,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 428,
                          "name": "id",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 422,
                          "src": "1310:2:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1301:12:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Student_$701_storage",
                          "typeString": "struct PakbetUseCase.Student storage ref"
                        }
                      },
                      "id": 430,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "blockChainAccount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 697,
                      "src": "1301:30:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 431,
                      "name": "_studentAccount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 418,
                      "src": "1334:15:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1301:48:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 433,
                  "nodeType": "ExpressionStatement",
                  "src": "1301:48:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 438,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 434,
                        "name": "premiumStudents",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 717,
                        "src": "1360:15:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 436,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 435,
                        "name": "_studentAccount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 418,
                        "src": "1376:15:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1360:32:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 437,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1395:4:3",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "1360:39:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 439,
                  "nodeType": "ExpressionStatement",
                  "src": "1360:39:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 444,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 440,
                        "name": "addressToStudent",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 729,
                        "src": "1410:16:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 442,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 441,
                        "name": "_studentAccount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 418,
                        "src": "1427:15:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1410:33:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 443,
                      "name": "id",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 422,
                      "src": "1446:2:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1410:38:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 445,
                  "nodeType": "ExpressionStatement",
                  "src": "1410:38:3"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 447,
                        "name": "id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 422,
                        "src": "1475:2:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 448,
                        "name": "_studentAccount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 418,
                        "src": "1479:15:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 446,
                      "name": "NewStudent",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 671,
                      "src": "1464:10:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (uint256,address)"
                      }
                    },
                    "id": 449,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1464:31:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 450,
                  "nodeType": "EmitStatement",
                  "src": "1459:36:3"
                }
              ]
            },
            "documentation": null,
            "id": 452,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_enrollStudent",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 419,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 418,
                  "name": "_studentAccount",
                  "nodeType": "VariableDeclaration",
                  "scope": 452,
                  "src": "1205:23:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 417,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1205:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1204:25:3"
            },
            "returnParameters": {
              "id": 420,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1239:0:3"
            },
            "scope": 453,
            "src": "1181:321:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "internal"
          }
        ],
        "scope": 454,
        "src": "64:1441:3"
      }
    ],
    "src": "0:2841:3"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.0+commit.1d4f565a.Emscripten.clang"
  },
  "networks": {
    "5777": {
      "events": {
        "0xcbb28b3e1f77d025889ab5d1e72a2eca69e6105bc36f0044122e59c55f40e18f": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "name": "issuerAddress",
              "type": "address"
            },
            {
              "indexed": false,
              "name": "title",
              "type": "string"
            },
            {
              "indexed": false,
              "name": "description",
              "type": "string"
            }
          ],
          "name": "NewTemplate",
          "type": "event",
          "signature": "0xcbb28b3e1f77d025889ab5d1e72a2eca69e6105bc36f0044122e59c55f40e18f"
        },
        "0x35445dd7684af4d0b1828f42019bd59ce22b71771e931983dfe04d5eb270afd8": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "name": "hashCode",
              "type": "bytes32"
            }
          ],
          "name": "NewCertificate",
          "type": "event",
          "signature": "0x35445dd7684af4d0b1828f42019bd59ce22b71771e931983dfe04d5eb270afd8"
        },
        "0x1954ac83e537c0e756ec6df543e27af81f396a50b2f00ef7cc521308d3cba1f4": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "name": "hashCode",
              "type": "bytes32"
            },
            {
              "indexed": false,
              "name": "student",
              "type": "address"
            }
          ],
          "name": "NewPremiumCertificate",
          "type": "event",
          "signature": "0x1954ac83e537c0e756ec6df543e27af81f396a50b2f00ef7cc521308d3cba1f4"
        },
        "0xaf49f6e647e48528a5c4c0a5801947007b7fa9744c066de10b2f7e747754bf1d": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "name": "issuerId",
              "type": "uint256"
            },
            {
              "indexed": false,
              "name": "name",
              "type": "string"
            }
          ],
          "name": "NewIssuer",
          "type": "event",
          "signature": "0xaf49f6e647e48528a5c4c0a5801947007b7fa9744c066de10b2f7e747754bf1d"
        },
        "0x76d881824e81c30f0d2ea36f999b13c9d258bc821dc2d29a17eb8ba7f95c275b": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "name": "id",
              "type": "uint256"
            },
            {
              "indexed": false,
              "name": "student",
              "type": "address"
            }
          ],
          "name": "NewStudent",
          "type": "event",
          "signature": "0x76d881824e81c30f0d2ea36f999b13c9d258bc821dc2d29a17eb8ba7f95c275b"
        },
        "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "previousOwner",
              "type": "address"
            },
            {
              "indexed": true,
              "name": "newOwner",
              "type": "address"
            }
          ],
          "name": "OwnershipTransferred",
          "type": "event",
          "signature": "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0"
        }
      },
      "links": {},
      "address": "0x6DfA062bB9a11ba9775b429a69c60f79b6A8E27A",
      "transactionHash": "0xf19dcf1636ad2afc453b2519cb24b423c78b37331e57d5241a731a4abe125dfa"
    }
  },
  "schemaVersion": "3.0.18",
  "updatedAt": "2019-11-10T10:11:33.844Z",
  "networkType": "ethereum",
  "devdoc": {
    "methods": {
      "accreditIssuer(address,string)": {
        "details": "Only the owner of the smart contract account can call this function. \r",
        "params": {
          "_issuerAddress": "Blockchain Address associated to the training institution.\r",
          "_name": "Name of the training institution.\r"
        }
      },
      "awardPublicCertificates(uint256,bytes32,address)": {
        "params": {
          "_hashCode": "the resulting value when pdf is hashed.\r",
          "_studentAddress": "Blockchain Address associated to the student.\r",
          "_templateId": "uint256 value corresponding to the index position of template in the templates[] array.\r"
        }
      },
      "awardRegularCertificate(bytes32)": {
        "details": "Record the hash value of the pdf document to the blockchain account.\r",
        "params": {
          "_hashCode": "the resulting value when pdf is hashed.\r"
        },
        "return": "true if awarding of certificate is good, false if awarding of certificate fails.\r"
      },
      "createTemplate(string,string)": {
        "details": "Only account in the issuer[] array can call this function.\r",
        "params": {
          "_description": "certificate description e.g. BTA Expert Program\r",
          "_title": "certificate description e.g. Certificate of Attendance.\r"
        }
      },
      "deActivateIssuerById(uint256)": {
        "params": {
          "_index": "uint256 value corresponding to the index position of the training institution\r in the issuers[] array.\r"
        }
      },
      "enrollStudent(address)": {
        "details": "Only accredited account can call this function. \r",
        "params": {
          "_studentAddress": "Blockchain Address associated to the student.\r"
        }
      },
      "getIssuedTemplates(uint256)": {
        "params": {
          "_id": "uint256 value corresponding to the index position of the training institution\r"
        },
        "return": "an array containing the template ids created template by the institution \r"
      },
      "getIssuerCount()": {
        "return": "the number of accredited institution\r"
      },
      "getStudentCertificates(uint256)": {
        "params": {
          "_id": "uint256 value corresponding to the index position of the student\r in the students[] array.\r"
        },
        "return": "an array containing the certificate ids owned by the student.\r"
      },
      "isOwner()": {
        "return": "true if `msg.sender` is the owner of the contract.\r"
      },
      "owner()": {
        "return": "the address of the owner.\r"
      },
      "reActivateIssuerById(uint256)": {
        "params": {
          "_index": "uint256 value corresponding to the index position of the training institution\r in the issuers[] array.\r"
        }
      },
      "renounceOwnership()": {
        "details": "Allows the current owner to relinquish control of the contract.\r"
      },
      "transferOwnership(address)": {
        "details": "Allows the current owner to transfer control of the contract to a newOwner.\r",
        "params": {
          "newOwner": "The address to transfer ownership to.\r"
        }
      },
      "validateRegularCertificate(bytes32)": {
        "params": {
          "_hashCode": "the resulting value when pdf is hashed.\r"
        },
        "return": "true if Certificate exist in the blockchain, false if not.\r"
      }
    }
  },
  "userdoc": {
    "methods": {
      "accreditIssuer(address,string)": {
        "notice": "Add training institution to the blockchain.\r"
      },
      "awardRegularCertificate(bytes32)": {
        "notice": "Only accredited account can call this function.\r"
      },
      "createTemplate(string,string)": {
        "notice": "Creates blank certificates which will become basis for certificates\r to be issued.\r"
      },
      "deActivateIssuerById(uint256)": {
        "notice": "Prevent a training institution from creating and awarding certificates.\r"
      },
      "enrollStudent(address)": {
        "notice": "Add student to the blockchain.\r"
      },
      "reActivateIssuerById(uint256)": {
        "notice": "Allows a training institution from creating and awarding certificates.\r"
      },
      "renounceOwnership()": {
        "notice": "Renouncing to ownership will leave the contract without an owner.\r It will not be possible to call the functions with the `onlyOwner`\r modifier anymore.\r"
      }
    }
  }
}